- en: Clustering World Happiness
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the final chapter of this book, we will look at utilizing ensemble cluster
    analysis in order to explore relationships in reported happiness around the world.
    In order to do so, we will leverage the `OpenEnsembles` library. First, we will
    present the data and its purpose. We will then construct our ensemble. Finally,
    we will try to gain more knowledge about structures and relationships within our
    data.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following are the topics that we will cover in this chapter:'
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the World Happiness Report
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating the ensemble
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gaining insights
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You will require basic knowledge of machine learning techniques and algorithms.
    Furthermore, a knowledge of python conventions and syntax is required. Finally,
    familiarity with the NumPy library will greatly help the reader to understand
    some custom algorithm implementations.
  prefs: []
  type: TYPE_NORMAL
- en: 'The code files of this chapter can be found on GitHub:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://github.com/PacktPublishing/Hands-On-Ensemble-Learning-with-Python/tree/master/Chapter13](https://github.com/PacktPublishing/Hands-On-Ensemble-Learning-with-Python/tree/master/Chapter13)'
  prefs: []
  type: TYPE_NORMAL
- en: Check out the following video to see the Code in Action: [http://bit.ly/2ShFsUm](http://bit.ly/2ShFsUm)[.](http://bit.ly/2ShFsUm)
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the World Happiness Report
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The World Happiness Report is a survey of happiness in individual countries.
    It started from a United Nations meeting about well-being and happiness around
    the world. The survey generates happiness rankings using data from the Gallup
    World Poll, where people rate their overall quality of life (the variable containing
    the evaluations is the life ladder variable). The data can be found on the *World
    Happiness Report* website under the downloads section ([https://worldhappiness.report/ed/2019/](https://worldhappiness.report/ed/2019/)).
    Apart from the Life Ladder, the dataset also contains a number of other factors.
    The ones we will focus on are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Log GDP per capita
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Social support
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Healthy life expectancy at birth
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Freedom to make life choices
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Generosity
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Perceptions of corruption
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Positive affect (average of happiness, laughter, and enjoyment)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Negative affect (average of worry, sadness, and anger)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Confidence in national government
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Democratic quality (how democratic the government is)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Delivery quality (how effective the government is)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'We can see how each one of these factors affects the life ladder by examining
    them on scatter plots. The following diagram depicts the scatter plots between
    each factor (*x *axis) and the life ladder (*y *axis):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/7c0d8594-7580-42ab-bddd-530886923610.png)'
  prefs: []
  type: TYPE_IMG
- en: Scatter plots of the various factors against the Life Ladder
  prefs: []
  type: TYPE_NORMAL
- en: 'As is evident, **Log GDP per capita** and **Healthy life expectancy at birth**
    have the strongest positive and linear correlations with the life ladder. **Democratic
    quality**, **Delivery quality**, **Freedom to make life choices**, **Positive
    affect**, and **Social support** also exhibit positive correlations to the life
    ladder. **Negative affect** and **Perceptions of corruption** show negative correlations,
    while **Confidence in national government** does not indicate any significant
    correlation. By examining the Pearson''s **correlation coefficient** (**r**) of
    each factor to the Life Ladder, we are able to confirm our visual findings:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Factor** | **Correlation coefficient** (**r**) |'
  prefs: []
  type: TYPE_TB
- en: '| Log GDP per capita | 0.779064 |'
  prefs: []
  type: TYPE_TB
- en: '| Social support | 0.702461 |'
  prefs: []
  type: TYPE_TB
- en: '| Healthy life expectancy at birth | 0.736797 |'
  prefs: []
  type: TYPE_TB
- en: '| Freedom to make life choices | 0.520988 |'
  prefs: []
  type: TYPE_TB
- en: '| Generosity | 0.197423 |'
  prefs: []
  type: TYPE_TB
- en: '| Perceptions of corruption | -0.42075 |'
  prefs: []
  type: TYPE_TB
- en: '| Positive affect | 0.543377 |'
  prefs: []
  type: TYPE_TB
- en: '| Negative affect | -0.27933 |'
  prefs: []
  type: TYPE_TB
- en: '| Confidence in national government | -0.09205 |'
  prefs: []
  type: TYPE_TB
- en: '| Democratic quality | 0.614572 |'
  prefs: []
  type: TYPE_TB
- en: '| Delivery quality | 0.70794 |'
  prefs: []
  type: TYPE_TB
- en: Correlation coefficient of each factor to the life ladder
  prefs: []
  type: TYPE_NORMAL
- en: 'Over the years, a total of 165 individual countries have been studied. The
    countries are organized in 10 different regions, according to their geographic
    location. The distribution of countries to each region for the latest report can
    be seen in the following pie chart. As is evident, Sub-Saharan Africa, Western
    Europe, and Central and Eastern Europe contain the most countries. This does not
    imply that these regions have the highest populations. It simply implies that
    these regions have the greatest number of separate countries:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/9506ce4b-c362-4db7-9b16-858aa179399d.png)'
  prefs: []
  type: TYPE_IMG
- en: Distribution of countries to each region for 2018
  prefs: []
  type: TYPE_NORMAL
- en: 'Finally, it would be interesting to see how the Life Ladder progresses throughout
    the years. The following boxplot shows the Life Ladder''s progression from 2005
    to 2018\. What we notice is that 2005 was a year with exceedingly high scores,
    while all other years are approximately the same. Given that there is not a global
    event that may explain this anomaly, we assume that something in the data collection
    process has influenced it:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a4eabdb3-3827-42fc-938c-9f180718c25a.png)'
  prefs: []
  type: TYPE_IMG
- en: Boxplots of the Life Ladder for the various years
  prefs: []
  type: TYPE_NORMAL
- en: 'Indeed, if we examine the number of countries surveyed each year, we can see
    that 2005 has a very small number of countries compared to other years. There
    are only 27 countries for 2005, while 2006 has 89 countries. The number continues
    to increase up until 2011, when it stabilizes:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Year** | **Number of countries** |'
  prefs: []
  type: TYPE_TB
- en: '| 2005 | 27 |'
  prefs: []
  type: TYPE_TB
- en: '| 2006 | 89 |'
  prefs: []
  type: TYPE_TB
- en: '| 2007 | 102 |'
  prefs: []
  type: TYPE_TB
- en: '| 2008 | 110 |'
  prefs: []
  type: TYPE_TB
- en: '| 2009 | 114 |'
  prefs: []
  type: TYPE_TB
- en: '| 2010 | 124 |'
  prefs: []
  type: TYPE_TB
- en: '| 2011 | 146 |'
  prefs: []
  type: TYPE_TB
- en: '| 2012 | 142 |'
  prefs: []
  type: TYPE_TB
- en: '| 2013 | 137 |'
  prefs: []
  type: TYPE_TB
- en: '| 2014 | 145 |'
  prefs: []
  type: TYPE_TB
- en: '| 2015 | 143 |'
  prefs: []
  type: TYPE_TB
- en: '| 2016 | 142 |'
  prefs: []
  type: TYPE_TB
- en: '| 2017 | 147 |'
  prefs: []
  type: TYPE_TB
- en: '| 2018 | 136 |'
  prefs: []
  type: TYPE_TB
- en: Number of countries surveyed each year
  prefs: []
  type: TYPE_NORMAL
- en: 'If we only consider the initial 27 countries, the boxplots show the expected
    outcome. There are some fluctuations in the mean and deviation results; however,
    on average, the life ladder values are distributed around the same values. Furthermore,
    if we compare the average values with those of the previous boxplot, we see that,
    on average, these 27 countries are happier than the rest of the countries that
    were later added to the dataset:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/cbabf372-cbb2-4821-8b4b-68b2cb524369.png)'
  prefs: []
  type: TYPE_IMG
- en: Boxplots for just the 27 countries that were part of the original 2005 dataset
  prefs: []
  type: TYPE_NORMAL
- en: Creating the ensemble
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In order to create the ensemble, we will utilize the `openensembles` library
    that we presented in [Chapter 8](https://cdp.packtpub.com/hands_on_ensemble_learning_with_python/wp-admin/post.php?post=36&action=edit#post_31), *Clustering*.
    As our dataset does not contain labels, we cannot use the homogeneity score in
    order to evaluate our clustering models. Instead, we will use the silhouette score,
    which evaluates how cohesive each cluster is and how separate different clusters
    are. First, we must load our dataset, which is provided in the `WHR.csv` file.
    The second file that we load, `Regions.csv`, contains the region that each country
    belongs to. We will utilize the data from 2017, as 2018 has a lot of missing data
    (for example, **D****elivery quality** and **Democratic quality** are completely
    absent). We will fill any missing data using the median of the dataset. For our
    experiment, we will utilize the factors we presented earlier. We store them in
    the `columns` variable, for ease of reference. We then proceed to generate the
    OpenEnsembles `data` object:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'In order to create our K-means ensemble, we will test a number of *K* values
    and a number of ensemble sizes. We will test *K* values of 2, 4, 6, 8, 10, 12,
    and 14, and ensembles of size 5, 10, 20, and 50\. In order to combine the individual
    base clusters, we will utilize co-occurrence linkage, as this was the most stable
    out of the three algorithms in [Chapter 8](f6899a7f-8345-4d8f-8b74-f88ede323e5e.xhtml),
    *Clustering*. We will store the results in the results dictionary, in order to
    process them later. Finally, we will create a pandas DataFrame from the results
    dictionary and arrange it in a two-dimensional array, in which each row corresponds
    to a certain *K* value and each column corresponds to a certain ensemble size:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'The results are depicted in the following table. As is evident, the silhouette
    score decreases as *K* increases. Furthermore, there seems to be a certain stability
    for *K* values up to six. Still, our data was fed to the clustering ensemble without
    any preprocessing. Thus, the distance metric can be dominated by features whose
    values are greater than others:'
  prefs: []
  type: TYPE_NORMAL
- en: '| SizeK | 5 | 10 | 20 | 50 |'
  prefs: []
  type: TYPE_TB
- en: '| 2 | 0.618 | 0.618 | 0.618 | 0.618 |'
  prefs: []
  type: TYPE_TB
- en: '| 4 | 0.533 | 0.533 | 0.533 | 0.533 |'
  prefs: []
  type: TYPE_TB
- en: '| 6 | 0.475 | 0.475 | 0.475 | 0.475 |'
  prefs: []
  type: TYPE_TB
- en: '| 8 | 0.396 | 0.398 | 0.264 | 0.243 |'
  prefs: []
  type: TYPE_TB
- en: '| 10 | 0.329 | 0.248 | 0.282 | 0.287 |'
  prefs: []
  type: TYPE_TB
- en: '| 12 | 0.353 | 0.315 | 0.327 | 0.350 |'
  prefs: []
  type: TYPE_TB
- en: '| 14 | 0.333 | 0.309 | 0.343 | 0.317 |'
  prefs: []
  type: TYPE_TB
- en: Results from the experimentation of different K values and ensemble sizes
  prefs: []
  type: TYPE_NORMAL
- en: 'In order to exclude the possibility that some features dominate over others,
    we will repeat the experiment by using normalized features, as well as **t-Distributed
    Stochastic Neighbor Embedding** (**t-SNE**) transformed features. First, we will
    test the normalized features. We must first subtract the mean and then divide
    by the standard deviation of each feature. This is easily achieved by using the
    standard pandas functions, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'We then test the same *K* values and ensemble sizes. As the following table
    shows, the results are quite similar to the original experiment:'
  prefs: []
  type: TYPE_NORMAL
- en: '| SizeK | 5 | 10 | 20 | 50 |'
  prefs: []
  type: TYPE_TB
- en: '| 2 | 0.618 | 0.618 | 0.618 | 0.618 |'
  prefs: []
  type: TYPE_TB
- en: '| 4 | 0.533 | 0.533 | 0.533 | 0.533 |'
  prefs: []
  type: TYPE_TB
- en: '| 6 | 0.475 | 0.475 | 0.475 | 0.475 |'
  prefs: []
  type: TYPE_TB
- en: '| 8 | 0.393 | 0.396 | 0.344 | 0.264 |'
  prefs: []
  type: TYPE_TB
- en: '| 10 | 0.311 | 0.355 | 0.306 | 0.292 |'
  prefs: []
  type: TYPE_TB
- en: '| 12 | 0.346 | 0.319 | 0.350 | 0.350 |'
  prefs: []
  type: TYPE_TB
- en: '| 14 | 0.328 | 0.327 | 0.326 | 0.314 |'
  prefs: []
  type: TYPE_TB
- en: Silhouette scores for the normalized data
  prefs: []
  type: TYPE_NORMAL
- en: 'Finally, we repeat the experiment with t-SNE as a preprocessing step. First,
    we import t-SNE with `from sklearn.manifold import t_sne`. In order to preprocess
    the data, we call the `fit_transform` function of `TSNE`, as shown in the following
    code excerpt. Note that `oe.data` now has `[0, 1]` as column names, since t-SNE,
    by default, only creates two components. Thus, our data will have only two columns:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'The results are depicted in the following table. We can see that t-SNE outperforms
    the other two approaches for some values. We are especially interested in 10 as
    the *K* value, due to the fact that there are 10 regions in the dataset. In the
    next section, we will try to gain insights into the data, using a *K* value of
    10 and an ensemble size of 20:'
  prefs: []
  type: TYPE_NORMAL
- en: '| SizeK | 5 | 10 | 20 | 50 |'
  prefs: []
  type: TYPE_TB
- en: '| 2 | 0.537 | 0.537 | 0.537 | 0.537 |'
  prefs: []
  type: TYPE_TB
- en: '| 4 | 0.466 | 0.466 | 0.466 | 0.466 |'
  prefs: []
  type: TYPE_TB
- en: '| 6 | 0.405 | 0.405 | 0.405 | 0.405 |'
  prefs: []
  type: TYPE_TB
- en: '| 8 | 0.343 | 0.351 | 0.351 | 0.351 |'
  prefs: []
  type: TYPE_TB
- en: '| 10 | 0.349 | 0.348 | 0.350 | 0.349 |'
  prefs: []
  type: TYPE_TB
- en: '| 12 | 0.282 | 0.288 | 0.291 | 0.288 |'
  prefs: []
  type: TYPE_TB
- en: '| 14 | 0.268 | 0.273 | 0.275 | 0.272 |'
  prefs: []
  type: TYPE_TB
- en: Silhouette scores for t-SNE transformed data
  prefs: []
  type: TYPE_NORMAL
- en: Gaining insights
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In order to gain further insights into our dataset''s structure and relationships,
    we will use the t-SNE approach, with ensembles of size 20 and base **k-Nearest
    Neighbors** (**k-NN**) clusterers with a *K* value of 10\. First, we create and
    train the cluster. Then, we add the cluster assignments to the DataFrame as an
    additional pandas column. We then calculate the means for each cluster and create
    a bar plot for each feature:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'The bar plots are depicted in the following diagram. The clusters are sorted
    according to their average Life Ladder value, in order to easily make comparisons
    between the individual features. As we can see, clusters 3, 2, and 4 have comparable
    average happiness (Life Ladder). The same can be said for clusters 6, 8, 9, 7,
    and 5\. We could argue that the ensemble only needs 5 clusters, but, by closely
    examining the other features, we see that this is not the case:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/38ed8d6d-379a-4095-afaf-5df1b596882f.png)'
  prefs: []
  type: TYPE_IMG
- en: Bar plots of cluster means for each feature
  prefs: []
  type: TYPE_NORMAL
- en: 'By looking at *Healthy life expectancy* and *Freedom to make life choices*,
    we see that clusters 3 and 4 are considerably better than 2\. In fact, if we examine
    every other feature, we see that clusters 3 and 4 are, on average, more fortunate  than
    cluster 2\. Maybe it is interesting to see how the individual countries are distributed
    among each cluster. The following table depicts the cluster assignments. Indeed,
    we see that clusters 2, 3, and 4 involve countries that have had to recently overcome
    difficulties that were not captured in our features. In fact, these are some of
    the most war-torn areas of the world. From a sociological point of view, it is extremely
    interesting that these war-torn and troubled regions seem to have the most confidence
    in their governments, despite exhibiting extremely negative democratic and delivery
    qualities:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **N** | **Countries** |'
  prefs: []
  type: TYPE_TB
- en: '| 1 | Cambodia, Egypt, Indonesia, Libya, Mongolia, Nepal, Philippines, and
    Turkmenistan |'
  prefs: []
  type: TYPE_TB
- en: '| 2 | Afghanistan, Burkina Faso, Cameroon, Central African Republic, Chad,
    Congo (Kinshasa), Guinea, Ivory Coast, Lesotho, Mali, Mozambique, Niger, Nigeria,
    Sierra Leone, and South Sudan |'
  prefs: []
  type: TYPE_TB
- en: '| 3 | Benin, Gambia, Ghana, Haiti, Liberia, Malawi, Mauritania, Namibia, South
    Africa, Tanzania, Togo, Uganda, Yemen, Zambia, and Zimbabwe |'
  prefs: []
  type: TYPE_TB
- en: '| 4 | Botswana, Congo (Brazzaville), Ethiopia, Gabon, India, Iraq, Kenya, Laos,
    Madagascar, Myanmar, Pakistan, Rwanda, and Senegal |'
  prefs: []
  type: TYPE_TB
- en: '| 5 | Albania, Argentina, Bahrain, Chile, China, Croatia, Czech Republic, Estonia,
    Montenegro, Panama, Poland, Slovakia, United States, and Uruguay |'
  prefs: []
  type: TYPE_TB
- en: '| 6 | Algeria, Azerbaijan, Belarus, Brazil, Dominican Republic, El Salvador,
    Iran, Lebanon, Morocco, Palestinian Territories, Paraguay, Saudi Arabia, Turkey,
    and Venezuela |'
  prefs: []
  type: TYPE_TB
- en: '| 7 | Bulgaria, Hungary, Kuwait, Latvia, Lithuania, Mauritius, Romania, Taiwan
    Province of China |'
  prefs: []
  type: TYPE_TB
- en: '| 8 | Armenia, Bosnia and Herzegovina, Colombia, Ecuador, Honduras, Jamaica,
    Jordan, Macedonia, Mexico, Nicaragua, Peru, Serbia, Sri Lanka, Thailand, Tunisia,
    United Arab Emirates, and Vietnam |'
  prefs: []
  type: TYPE_TB
- en: '| 9 | Bangladesh, Bolivia, Georgia, Guatemala, Kazakhstan, Kosovo, Kyrgyzstan,
    Moldova, Russia, Tajikistan, Trinidad and Tobago, Ukraine, and Uzbekistan |'
  prefs: []
  type: TYPE_TB
- en: '| 10 | Australia, Austria, Belgium, Canada, Costa Rica, Cyprus, Denmark, Finland,
    France, Germany, Greece, Hong Kong S.A.R. of China, Iceland, Ireland, Israel,
    Italy, Japan, Luxembourg, Malta, Netherlands, New Zealand, Norway, Portugal, Singapore,
    Slovenia, South Korea, Spain, Sweden, Switzerland, and United Kingdom |'
  prefs: []
  type: TYPE_TB
- en: Cluster assignments
  prefs: []
  type: TYPE_NORMAL
- en: Starting with to cluster 1, we see that the happiness of people in these countries
    is considerably better than the previous clusters. This can be attributed to a
    better life expectancy (less wars), better GDP per capita, social support, generosity,
    and freedom to make choices regarding life changes. Still, these countries are
    not as happy as they could be, mainly due to problems with democratic quality
    and delivery quality. Nonetheless, their confidence in their governments are second
    only to the previous group of clusters we discussed. Clusters 6, 8, and 9 are
    more or less on the same level of happiness. Their differences are in GDP per
    capita, life expectancy, freedom, generosity, and confidence. We can see that
    cluster 6 has, on average, stronger economies and life expectancy, although people's
    freedom, generosity, and the government's efficiency seem to be lacking. Clusters
    8 and 9 are less economically sound, but seem to have a lot more freedom and better
    functioning governments. Moreover, their generosity, on average, is greater than
    cluster 6\. Moving on to clusters 7 and 5, we see that they, too, are close in
    terms of happiness. These are countries where we see a positive democratic and
    delivery quality, with sufficient freedom, economic strength, social support,
    and a healthy life expectancy. These are developed countries, where people, on
    average, live a prosperous life without fear of dying from economic, political,
    or military causes. The problems in these countries are mainly the perception
    of corruption, people's confidence in their governments, and the efficiency of
    the governments. Finally, cluster 10 contains countries that are better in almost
    every aspect, compared to the rest of the world. These countries have, on average,
    the highest GDP per capita, life expectancy, generosity, and freedom, while having
    sufficiently high confidence in their national governments and low perceptions
    of corruption. These could be considered the ideal countries to live in, given
    a compatible cultural background.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we presented the World Happiness Report data, providing a description
    of the data's purpose, as well as describing the data's properties. In order to
    gain further insights into the data, we utilized cluster analysis, leveraging
    ensemble techniques. We used co-occurrence matrix linkage in order to combine
    the cluster assignments of different base clusters. We tested various setups,
    with different ensemble sizes and numbers of neighbors, in order to provide a
    k-NN ensemble. After identifying that a t-SNE decomposition with a *K* value of
    10 and 20 base clusters can be utilized, we analyzed the cluster assignments.
    We found that countries reporting the same happiness levels can, in fact, have
    different profiles. The most unhappy countries were, on average, developing countries
    who have to overcome many problems, concerning both their economies, and, in certain
    cases, wars. It is interesting that these countries had the most confidence in
    their governments, although these same governments are reported as dysfunctional.
    Countries that belong to clusters of medium happiness have either strong economies,
    but little freedom, or vice versa.
  prefs: []
  type: TYPE_NORMAL
- en: Developed countries with strong economies and life quality, but who perceive
    their governments as corrupt, are not able to achieve the highest happiness scores
    possible. Finally, the only countries that do not think their governments are
    corrupt have the strongest economies, democratic and delivery quality, and life
    expectancy. These are mostly countries in the European Union or the European Economic
    Area, along with Canada, Australia, New Zealand, Japan, South Korea, Costa Rica,
    Israel, Hong Kong, and Iceland.
  prefs: []
  type: TYPE_NORMAL
- en: In this book we have covered most ensemble learning techniques. After a short
    refresher on machine learning, we discussed about the main problems that arise
    from machine learning models. These problems are bias and variance. Ensemble learning
    techniques usually try to address these problems, through generative and non generative
    methods. We discussed both non-generative methods, such as Voting and Stacking,
    as well as generative methods, such as Bagging, Boosting, and Random Forests.
    Furthermore, we presented methods that can be utilized in order to create clustering
    ensembles, such as Majority Voting, Graph Closure, and Co-occurrence Linkage.
    Finally, we dedicated some chapters to specific applications, in order to show
    how some real-world problems should be handled. If there is a point that needs
    to be highlighted in this book, then it is that the data quality has a bigger
    impact on any particular model's performance than the algorithm used to create
    the model. Thus, ensemble learning techniques, such as any machine learning technique,
    should be used in order to address algorithmic weaknesses (of previously generated
    models) rather than poor data quality.
  prefs: []
  type: TYPE_NORMAL
