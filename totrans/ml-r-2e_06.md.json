["```py\n> b <- cov(launch$temperature, launch$distress_ct) /\n var(launch$temperature)\n> b\n[1] -0.04753968\n\n```", "```py\n> a <- mean(launch$distress_ct) - b * mean(launch$temperature)\n> a\n[1] 3.698413\n\n```", "```py\n> r <- cov(launch$temperature, launch$distress_ct) /\n (sd(launch$temperature) * sd(launch$distress_ct))\n> r\n[1] -0.5111264\n\n```", "```py\n> cor(launch$temperature, launch$distress_ct)\n[1] -0.5111264\n\n```", "```py\nreg <- function(y, x) {\n x <- as.matrix(x)\n x <- cbind(Intercept = 1, x)\n b <- solve(t(x) %*% x) %*% t(x) %*% y\n colnames(b) <- \"estimate\"\n print(b)\n}\n\n```", "```py\n> str(launch)\n'data.frame':      23 obs. of  4 variables:\n $ distress_ct         : int  0 1 0 0 0 0 0 0 1 1 ...\n $ temperature         : int  66 70 69 68 67 72 73 70 57 63 ...\n $ field_check_pressure: int  50 50 50 50 50 50 100 100 200 ...\n $ flight_num          : int  1 2 3 4 5 6 7 8 9 10 ...\n\n```", "```py\n> reg(y = launch$distress_ct, x = launch[2])\n estimate\nIntercept    3.69841270\ntemperature -0.04753968\n\n```", "```py\n> reg(y = launch$distress_ct, x = launch[2:4])\n estimate\nIntercept             3.527093383\ntemperature          -0.051385940\nfield_check_pressure  0.001757009\nflight_num            0.014292843\n\n```", "```py\n> insurance <- read.csv(\"insurance.csv\", stringsAsFactors = TRUE)\n\n```", "```py\n> str(insurance)\n'data.frame':     1338 obs. of  7 variables:\n $ age     : int  19 18 28 33 32 31 46 37 37 60 ...\n $ sex     : Factor w/ 2 levels \"female\",\"male\": 1 2 2 2 2 1 ...\n $ bmi     : num  27.9 33.8 33 22.7 28.9 25.7 33.4 27.7 ...\n $ children: int  0 1 3 0 0 0 1 3 2 0 ...\n $ smoker  : Factor w/ 2 levels \"no\",\"yes\": 2 1 1 1 1 1 1 1 ...\n $ region  : Factor w/ 4 levels \"northeast\",\"northwest\",..: ...\n $ expenses: num  16885 1726 4449 21984 3867 ...\n\n```", "```py\n> summary(insurance$expenses)\n Min. 1st Qu.  Median    Mean 3rd Qu.    Max.\n 1122    4740    9382   13270   16640   63770\n\n```", "```py\n> hist(insurance$expenses)\n\n```", "```py\n> table(insurance$region)\nnortheast northwest southeast southwest\n 324       325       364       325\n\n```", "```py\n> cor(insurance[c(\"age\", \"bmi\", \"children\", \"expenses\")])\n age        bmi   children   expenses\nage      1.0000000 0.10934101 0.04246900 0.29900819\nbmi      0.1093410 1.00000000 0.01264471 0.19857626\nchildren 0.0424690 0.01264471 1.00000000 0.06799823\nexpenses 0.2990082 0.19857626 0.06799823 1.00000000\n\n```", "```py\n> pairs(insurance[c(\"age\", \"bmi\", \"children\", \"expenses\")])\n\n```", "```py\n> pairs.panels(insurance[c(\"age\", \"bmi\", \"children\", \"expenses\")])\n\n```", "```py\n> ins_model <- lm(expenses ~ age + children + bmi + sex +\n smoker + region, data = insurance)\n\n```", "```py\n> ins_model <- lm(expenses ~ ., data = insurance)\n\n```", "```py\n> ins_model\n\nCall:\nlm(formula = expenses ~ ., data = insurance)\n\nCoefficients:\n (Intercept)              age          sexmale \n -11941.6            256.8           -131.4 \n bmi         children        smokeryes \n 339.3            475.7          23847.5 \nregionnorthwest  regionsoutheast  regionsouthwest \n -352.8          -1035.6           -959.3\n\n```", "```py\n> summary(ins_model)\n\n```", "```py\n> insurance$age2 <- insurance$age^2\n\n```", "```py\n> insurance$bmi30 <- ifelse(insurance$bmi >= 30, 1, 0)\n\n```", "```py\n> ins_model2 <- lm(expenses ~ age + age2 + children + bmi + sex +\n bmi30*smoker + region, data = insurance)\n\n```", "```py\n> summary(ins_model2)\n\n```", "```py\n> tee <- c(1, 1, 1, 2, 2, 3, 4, 5, 5, 6, 6, 7, 7, 7, 7)\n> at1 <- c(1, 1, 1, 2, 2, 3, 4, 5, 5)\n> at2 <- c(6, 6, 7, 7, 7, 7)\n> bt1 <- c(1, 1, 1, 2, 2, 3, 4)\n> bt2 <- c(5, 5, 6, 6, 7, 7, 7, 7)\n> sdr_a <- sd(tee) - (length(at1) / length(tee) * sd(at1) +\n length(at2) / length(tee) * sd(at2))\n> sdr_b <- sd(tee) - (length(bt1) / length(tee) * sd(bt1) +\n length(bt2) / length(tee) * sd(bt2))\n\n```", "```py\n> sdr_a\n[1] 1.202815\n> sdr_b\n[1] 1.392751\n\n```", "```py\n> wine <- read.csv(\"whitewines.csv\")\n\n```", "```py\n> str(wine)\n'data.frame':  4898 obs. of  12 variables:\n $ fixed.acidity       : num  6.7 5.7 5.9 5.3 6.4 7 7.9 ...\n $ volatile.acidity    : num  0.62 0.22 0.19 0.47 0.29 0.12 ...\n $ citric.acid         : num  0.24 0.2 0.26 0.1 0.21 0.41 ...\n $ residual.sugar      : num  1.1 16 7.4 1.3 9.65 0.9 ...\n $ chlorides           : num  0.039 0.044 0.034 0.036 0.041 ...\n $ free.sulfur.dioxide : num  6 41 33 11 36 22 33 17 34 40 ...\n $ total.sulfur.dioxide: num  62 113 123 74 119 95 152 ...\n $ density             : num  0.993 0.999 0.995 0.991 0.993 ...\n $ pH                  : num  3.41 3.22 3.49 3.48 2.99 3.25 ...\n $ sulphates           : num  0.32 0.46 0.42 0.54 0.34 0.43 ...\n $ alcohol             : num  10.4 8.9 10.1 11.2 10.9 ...\n $ quality             : int  5 6 6 4 6 6 6 6 6 7 ...\n\n```", "```py\n> hist(wine$quality)\n\n```", "```py\n> wine_train <- wine[1:3750, ]\n> wine_test <- wine[3751:4898, ]\n\n```", "```py\n> m.rpart <- rpart(quality ~ ., data = wine_train)\n\n```", "```py\n> m.rpart\nn= 3750\n\nnode), split, n, deviance, yval\n * denotes terminal node\n\n 1) root 3750 2945.53200 5.870933 \n 2) alcohol< 10.85 2372 1418.86100 5.604975 \n 4) volatile.acidity>=0.2275 1611  821.30730 5.432030 \n 8) volatile.acidity>=0.3025 688  278.97670 5.255814 *\n 9) volatile.acidity< 0.3025 923  505.04230 5.563380 *\n 5) volatile.acidity< 0.2275 761  447.36400 5.971091 *\n 3) alcohol>=10.85 1378 1070.08200 6.328737 \n 6) free.sulfur.dioxide< 10.5 84   95.55952 5.369048 *\n 7) free.sulfur.dioxide>=10.5 1294  892.13600 6.391036 \n 14) alcohol< 11.76667 629  430.11130 6.173291 \n 28) volatile.acidity>=0.465 11   10.72727 4.545455 *\n 29) volatile.acidity< 0.465 618  389.71680 6.202265 *\n 15) alcohol>=11.76667 665  403.99400 6.596992 *\n\n```", "```py\n> library(rpart.plot)\n> rpart.plot(m.rpart, digits = 3)\n\n```", "```py\n> rpart.plot(m.rpart, digits = 4, fallen.leaves = TRUE,\n type = 3, extra = 101)\n\n```", "```py\n> p.rpart <- predict(m.rpart, wine_test)\n\n```", "```py\n> summary(p.rpart)\n Min. 1st Qu.  Median    Mean 3rd Qu.    Max.\n 4.545   5.563   5.971   5.893   6.202   6.597\n> summary(wine_test$quality)\n Min. 1st Qu.  Median    Mean 3rd Qu.    Max.\n 3.000   5.000   6.000   5.901   6.000   9.000\n\n```", "```py\n> cor(p.rpart, wine_test$quality)\n[1] 0.5369525\n\n```", "```py\n> MAE <- function(actual, predicted) {\n mean(abs(actual - predicted))\n}\n\n```", "```py\n> MAE(p.rpart, wine_test$quality)\n[1] 0.5872652\n\n```", "```py\n> mean(wine_train$quality)\n[1] 5.870933\n\n```", "```py\n> MAE(5.87, wine_test$quality)\n[1] 0.6722474\n\n```", "```py\n> library(RWeka)\n> m.m5p <- M5P(quality ~ ., data = wine_train)\n\n```", "```py\n> m.m5p\nM5 pruned model tree:\n(using smoothed linear models)\n\nalcohol <= 10.85 :\n|   volatile.acidity <= 0.238 :\n|   |   fixed.acidity <= 6.85 : LM1 (406/66.024%)\n|   |   fixed.acidity >  6.85 :\n|   |   |   free.sulfur.dioxide <= 24.5 : LM2 (113/87.697%)\n\n```", "```py\nLM num: 1\nquality =\n 0.266 * fixed.acidity\n - 2.3082 * volatile.acidity\n - 0.012 * citric.acid\n + 0.0421 * residual.sugar\n + 0.1126 * chlorides\n + 0 * free.sulfur.dioxide\n - 0.0015 * total.sulfur.dioxide\n - 109.8813 * density\n + 0.035 * pH\n + 1.4122 * sulphates\n - 0.0046 * alcohol\n + 113.1021\n\n```", "```py\n> summary(m.m5p)\n\n=== Summary ===\n\nCorrelation coefficient                  0.6666\nMean absolute error                      0.5151\nRoot mean squared error                  0.6614\nRelative absolute error                 76.4921 %\nRoot relative squared error             74.6259 %\nTotal Number of Instances             3750 \n\n```", "```py\n> p.m5p <- predict(m.m5p, wine_test)\n\n```", "```py\n> summary(p.m5p)\n Min. 1st Qu.  Median    Mean 3rd Qu.    Max.\n 4.389   5.430   5.863   5.874   6.305   7.437\n\n```", "```py\n> cor(p.m5p, wine_test$quality)\n[1] 0.6272973\n\n```", "```py\n> MAE(wine_test$quality, p.m5p)\n[1] 0.5463023\n\n```"]