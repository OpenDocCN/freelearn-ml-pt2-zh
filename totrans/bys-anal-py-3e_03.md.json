["```py\nwith pm.Model() as model_lb: \n    *α* = pm.Normal(\"*α*\", mu=0, sigma=100) \n    *β* = pm.Normal(\"*β*\", mu=0, sigma=10) \n    σ = pm.HalfCauchy(\"σ\", 10) \n    μ = pm.Deterministic(\"μ\", *α* + *β* * bikes.temperature) \n    y_pred = pm.Normal(\"y_pred\", mu=μ, sigma=σ, observed=bikes.rented) \n    idata_lb = pm.sample()\n```", "```py\naz.plot_posterior(idata_lb, var_names=['∼μ'])\n```", "```py\nposterior = az.extract(idata_lb, num_samples=50) \nx_plot = xr.DataArray( \n    np.linspace(bikes.temperature.min(), bikes.temperature.max(), 50), \n    dims=\"plot_id\" \n) \nmean_line = posterior[\"*α*\"].mean() + posterior[\"*β*\"].mean() * x_plot \nlines = posterior[\"*α*\"] + posterior[\"*β*\"] * x_plot \nhdi_lines = az.hdi(idata_lb.posterior[\"μ\"]) \n...\n```", "```py\npm.sample_posterior_predictive(idata_lb, model=model_lb, extend_inferencedata=True)\n```", "```py\nwith pm.Model() as model_neg: \n    *α* = pm.Normal(\"*α*\", mu=0, sigma=1) \n    *β* = pm.Normal(\"*β*\", mu=0, sigma=10) \n    σ = pm.HalfNormal(\"σ\", 10) \n    μ = pm.Deterministic(\"μ\", pm.math.exp(*α* + *β* * bikes.temperature)) \n    y_pred = pm.NegativeBinomial(\"y_pred\", mu=μ, alpha=σ, observed=bikes.rented) \n    idata_neg = pm.sample() \n    idata_neg.extend(pm.sample_posterior_predictive(idata_neg))\n```", "```py\nwith pm.Model() as model_t: \n    *α* = pm.Normal(\"*α*\", mu=ans.y.mean(), sigma=1) \n    *β* = pm.Normal(\"*β*\", mu=0, sigma=1) \n    σ = pm.HalfNormal(\"σ\", 5) \n    ν_ = pm.Exponential(\"ν_\", 1 / 29) \n    ν = pm.Deterministic(\"ν\", ν_ + 1) \n    μ = pm.Deterministic(\"μ\", *α* + *β* * ans.x) \n    _ = pm.StudentT(\"y_pred\", mu=μ, sigma=σ, nu=ν, observed=ans.y) \n    idata_t = pm.sample(2000)\n```", "```py\ndf = iris.query(\"species == ('setosa', 'versicolor')\") \ny_0 = pd.Categorical(df[\"species\"]).codes \nx_n = \"sepal_length\" \nx_0 = df[x_n].values \nx_c = x_0 - x_0.mean()\n```", "```py\nwith pm.Model() as model_lrs: \n    *α* = pm.Normal(\"*α*\", mu=0, sigma=1) \n    *β* = pm.Normal(\"*β*\", mu=0, sigma=5) \n    μ = *α* + x_c * *β* \n    *θ* = pm.Deterministic(\"*θ*\", pm.math.sigmoid(μ)) \n    bd = pm.Deterministic(\"bd\", -*α* / *β*) \n    yl = pm.Bernoulli(\"yl\", p=*θ*, observed=y_0) \n\n    idata_lrs = pm.sample()\n```", "```py\ndata = pd.read_csv(\"data/babies.csv\") \ndata.plot.scatter(\"month\", \"length\")\n```", "```py\nwith pm.Model() as model_vv: \n    x_shared = pm.MutableData(\"x_shared\", data.month.values.astype(float)) \n    *α* = pm.Normal(\"*α*\", sigma=10) \n    *β* = pm.Normal(\"*β*\", sigma=10) \n    γ = pm.HalfNormal(\"γ\", sigma=10) \n    δ = pm.HalfNormal(\"δ\", sigma=10) \n\n    μ = pm.Deterministic(\"μ\", 𝛼 + *β* * x_shared**0.5) \n    σ = pm.Deterministic(\"σ\", γ + δ * x_shared) \n\n    y_pred = pm.Normal(\"y_pred\", mu=μ, sigma=σ, observed=data.length) \n\n    idata_vv = pm.sample()\n```", "```py\nwith model_vv: \n    pm.set_data({\"x_shared\": [0.5]}) \n    ppc = pm.sample_posterior_predictive(idata_vv) \n    y_ppc = ppc.posterior_predictive[\"y_pred\"].stack(sample=(\"chain\", \"draw\"))\n```", "```py\ncoords = {\"group\": [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\"]} \n\nwith pm.Model(coords=coords) as unpooled_model: \n    *α* = pm.Normal(\"*α*\", mu=0, sigma=10, dims=\"group\") \n    *β* = pm.Normal(\"*β*\", mu=0, sigma=10, dims=\"group\") \n    σ = pm.HalfNormal(\"σ\", 5) \n    _ = pm.Normal(\"y_pred\", mu=*α*[idx] + *β*[idx] * x_m, sigma=σ, observed=y_m) \n\n    idata_up = pm.sample()\n```", "```py\nwith pm.Model(coords=coords) as hierarchical_centered: \n    # hyperpriors \n    *α*_μ = pm.Normal(\"*α*_μ\", mu=y_m.mean(), sigma=1) \n    *α*_σ = pm.HalfNormal(\"*α*_σ\", 5) \n    *β*_μ = pm.Normal(\"*β*_μ\", mu=0, sigma=1) \n    *β*_σ = pm.HalfNormal(\"*β*_σ\", sigma=5) \n\n    # priors \n    *α* = pm.Normal(\"*α*\", mu=*α*_μ, sigma=*α*_σ, dims=\"group\") \n    *β* = pm.Normal(\"*β*\", mu=*β*_μ, sigma=*β*_σ, dims=\"group\") \n    σ = pm.HalfNormal(\"σ\", 5) \n    _ = pm.Normal(\"y_pred\", mu=*α*[idx] + *β*[idx] * x_m, sigma=σ, observed=y_m) \n\n    idata_cen = pm.sample()\n```", "```py\nwith pm.Model(coords=coords) as hierarchical_non_centered: \n    # hyperpriors \n    *α*_μ = pm.Normal(\"*α*_μ\", mu=y_m.mean(), sigma=1) \n    *α*_σ = pm.HalfNormal(\"*α*_σ\", 5) \n    *β*_μ = pm.Normal(\"*β*_μ\", mu=0, sigma=1) \n    *β*_σ = pm.HalfNormal(\"*β*_σ\", sigma=5) \n\n    # priors \n    *α* = pm.Normal(\"*α*\", mu=*α*_μ, sigma=*α*_σ, dims=\"group\") \n\n    *β*_offset = pm.Normal(\"*β*_offset\", mu=0, sigma=1, dims=\"group\") \n    *β* = pm.Deterministic(\"*β*\", *β*_μ + *β*_offset * *β*_σ, dims=\"group\") \n\n    σ = pm.HalfNormal(\"σ\", 5) \n    _ = pm.Normal(\"y_pred\", mu=*α*[idx] + *β*[idx] * x_m, sigma=σ, observed=y_m) \n\n    idata_ncen = pm.sample(target_accept=0.85)\n```", "```py\nwith pm.Model() as model_mlb: \n    *α* = pm.Normal(\"*α*\", mu=0, sigma=1) \n    *β*0 = pm.Normal(\"*β*0\", mu=0, sigma=10) \n    *β*1 = pm.Normal(\"*β*1\", mu=0, sigma=10) \n    σ = pm.HalfNormal(\"σ\", 10) \n    μ = pm.Deterministic(\"μ\", pm.math.exp(*α* + *β*0 * bikes.temperature + \n                                              *β*1 * bikes.hour)) \n    _ = pm.NegativeBinomial(\"y_pred\", mu=μ, alpha=σ, observed=bikes.rented) \n\n    idata_mlb = pm.sample()\n```"]