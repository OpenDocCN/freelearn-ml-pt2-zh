- en: Use Machine Learning to Forecast the Stock Market
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Just recently, I was reading an article that described the tremendous success
    of a particular treatment in combating the **Methicillin-resistant Staphylococcus
    aureus** (**MRSA**) superbug. If you haven't heard of MRSA directly, it is likely
    you've heard something about current concerns that we are headed toward a time
    when our antibiotics will no longer be effective. This is largely an inevitable
    phenomenon that occurs because some bugs in the population are genetically more
    resistant to the relevant drug. When bugs that are susceptible to the drug are
    wiped out during treatment, the remaining drug-resistant bugs then reproduce and
    become the dominant variant in the population. To combat this, scientists are
    constantly pushing the boundaries of science to find new ways to combat these
    bugs.
  prefs: []
  type: TYPE_NORMAL
- en: 'In biology, this situation is called a **Red Queen''s race**: the term comes
    from a quote in Lewis Carol''s *Through the Looking Glass:*'
  prefs: []
  type: TYPE_NORMAL
- en: '"Now, here, you see, it takes all the running you can do, to keep in the same
    place."'
  prefs: []
  type: TYPE_NORMAL
- en: This effectively describes the situation we're in with antibiotics, but perhaps
    the answer is not to be found in moving on to new, ever-more advanced drugs. Perhaps
    the answer might be found in understanding the larger cycle at play and using
    it to our advantage.
  prefs: []
  type: TYPE_NORMAL
- en: That new treatment for MRSA I was discussing earlier? That was actually from
    a 10^(th) century book of medical potions called **Bald's Leechbook**. Among the
    listed ingredients were garlic, wine, and onions. This combination was found to
    have surpassed the results for our current treatment-of-last-resort, **vancomycin**.
  prefs: []
  type: TYPE_NORMAL
- en: But what does any of this have to do with forecasting the stock market? I would
    like to suggest that the very same phenomenon is at play in both scenarios. For
    example, every so often, a paper is published that alerts the financial world
    to the existence of a phenomenon that is a profitable anomaly. Most likely, this
    phenomenon is the downstream effect of some externally imposed, real-world constraint.
  prefs: []
  type: TYPE_NORMAL
- en: Take, for example, year-end tax loss sales. Because of the nature of tax laws,
    it makes sense for traders to sell their losses at the end of the year. This imposes
    downward price pressure on losing stocks toward year end. The falling prices then
    mean the stocks can be discounted beyond their fair value. This also means that,
    in January, the downward pressure is gone, replaced by upward pressure as new
    money is put to work in these undervalued assets. But once that phenomenon has
    been broadcast, it only makes sense for traders to attempt to get ahead of it
    and begin buying those stocks in late December and selling to those other traders
    who are expected to be buyers in January. These new traders, by entering the market,
    have now diluted the effect. They are relieving the year-end selling pressure
    and decreasing the January buying pressure. The effect is essentially arbitraged
    away right along with the profitability. What once worked no longer works and
    traders will begin to abandon the strategy and move on to the next new thing.
  prefs: []
  type: TYPE_NORMAL
- en: By now, I hope you are beginning to see the parallels. It is likely that the
    garlic, wine, and onions combination was once a very effective cure for bacterial
    infections that gradually lost its effectiveness as the bacteria adapted. Having
    been abandoned long ago as a cure, the bacteria had no reason to avoid the original
    genes that made them susceptible to this treatment. There are real-world constraints
    that make it nearly inevitable that these types of cycles will occur—both in living
    organisms and in markets. The key is to use this to our advantage.
  prefs: []
  type: TYPE_NORMAL
- en: In this chapter, we'll spend some time discussing how to build and test a trading
    strategy. We'll spend even more time, however, on how *not* to do it. There are
    countless pitfalls to avoid when trying to devise you own system, and it is nearly
    an impossible task, but it can be a lot of fun, and sometimes it can even be profitable.
    With that said, don't do dumb things such as risking money you can't afford to
    lose.
  prefs: []
  type: TYPE_NORMAL
- en: If you do decide to use anything you learned here to trade, you're on your own.
    This shouldn't be deemed investment advice of any kind, and I accept no responsibility
    for your actions.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Types of market analysis
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What does research tell us about the stock market?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to develop a trading system
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Types of market analysis
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let's begin with a discussion of some key terms and methods of analysis when
    dealing with financial markets. Though there are countless financial instruments,
    including stocks, bonds, ETFs, currencies, and swaps, we'll limit our discussion
    to stocks and the stock market. A stock is simply a fractional share of ownership
    in a public company. The price of a stock is expected to increase when future
    prospects for the company rise, and decrease as these prospects decline.
  prefs: []
  type: TYPE_NORMAL
- en: There are generally two camps that investors fall into. The first are the fundamental
    analysts. These analysts pore through company financials looking for information
    that indicates that, somehow, the market is undervaluing the shares of the company.
    These investors look at various factors, such as revenue, earnings, and cash flow,
    and various ratios of the values. This frequently involves looking at how one
    company's financials compare to another's.
  prefs: []
  type: TYPE_NORMAL
- en: The second camp of investors is the technical analysts. Technical analysts believe
    that share prices already reflect all publicly available information and that
    looking through the fundamentals is largely a waste of time. They believe that
    by looking at historical prices—stock charts—you can see areas where prices are
    likely to rise, fall, or stagnate. Generally, they feel that these charts reveal
    clues to investor psychology.
  prefs: []
  type: TYPE_NORMAL
- en: What both groups have in common is an underlying belief that the right analysis
    can lead to profits. But is that true?
  prefs: []
  type: TYPE_NORMAL
- en: What does research tell us about the stock market?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Perhaps the most influential theory of the stock market over the last 50 years
    is that of the efficient market hypothesis. This theory, developed by Eugene Fama,
    stipulates that markets are rational and that all the available information is
    appropriately reflected in stock prices. As such, it is impossible for an investor
    to consistently *beat the market* on a risk-adjusted basis. The efficient market
    hypothesis is often discussed as having three forms: a weak form, a semi-strong
    form, and a strong form:'
  prefs: []
  type: TYPE_NORMAL
- en: In the weak form, the market is efficient in the sense that you cannot use past
    information from prices to predict future prices. Information is reflected in
    stocks relatively quickly, and while technical analysis would be ineffective,
    in some scenarios, fundamental analysis could be effective.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the semi-strong form, prices immediately reflect all relevant new public
    information in an unbiased manner. Here, neither technical nor fundamental analysis
    would be effective.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: And finally, in the strong form, stock prices reflect all public and private
    information.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Based on these theories, there isn't much hope of making money by exploiting
    patterns in the market. But fortunately, while the market operates in a largely
    efficient manner on the whole, distinct pockets of inefficiency have been uncovered.
    Most of these tend to be ephemeral, but some have been documented as persisting.
    One of the most noteworthy—even according to Fama—is the outperformance of momentum
    strategies.
  prefs: []
  type: TYPE_NORMAL
- en: So, what exactly is a momentum strategy?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of variations on the theme, but the basic idea is that stocks
    are ranked from the highest to lowest according to their return over a prior period.
    The top-ranked performers are bought and held for a period of time, and then the
    process is repeated after a fixed holding period. A typical long-only momentum
    strategy might involve buying the top 25 performing stocks in the S&P 500 over
    the past year, holding them for a year, selling them, and then repeating the process.
  prefs: []
  type: TYPE_NORMAL
- en: This may sound like an absurdly simple strategy, and it is, but it has consistently
    returned results that defy expectation. But why? As you can imagine, a lot of
    research has examined this effect, and the hypothesis is that there is something
    inherently systemically biased about how humans deal with new information. The
    research suggests they underreact to news in the short term and then overreact
    to news in the long term. This means that, when stocks begin to rise on exceptionally
    good news, investors don't fully elevate the share price to the level that would
    fully reflect this news; it takes time for them to come around to incorporating
    this rosy outlook.
  prefs: []
  type: TYPE_NORMAL
- en: This tendency of investors to fail to adequately reprice shares in the face
    of exceedingly good news may be the result of a well-documented bias called the
    **anchoring effect**. Essentially, when presented with a number, even a random
    number, and then asked to estimate a real-world value, such as the number of countries
    in Africa, for instance, our answer will be mentally tethered to that number we
    were primed with. Remarkably, this happens even if we know the number is randomly
    generated and unrelated to the question.
  prefs: []
  type: TYPE_NORMAL
- en: So, will momentum strategies be arbitraged away as more traders learn of it
    and pile in? There has been some evidence of this in recent years, but it remains
    unclear. Regardless, the effect was demonstrably real and persisted far longer
    than can currently be accounted for by the efficient market hypothesis. So, there
    at least appears to be some hope for market prediction. With that in mind, let's
    now move on to exploring how we might go about unearthing our own market anomalies.
  prefs: []
  type: TYPE_NORMAL
- en: How to develop a trading strategy
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We'll begin our strategy development by focusing on the technical aspects. Let's
    take a look at the S&P 500 over the last few  years. We'll use `pandas` to import
    our data. This will give us access to several sources of stock data, including
    Yahoo! And Google.
  prefs: []
  type: TYPE_NORMAL
- en: 'First, you''ll need to install the data reader:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Then, go ahead and incorporate your imports:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, we''ll get our data for the `SPY` ETF, which represents the stocks of
    the S&P 500\. We''ll pull data from the start of 2010 through December 2018:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'This code generates the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/b39cf97d-19e3-4d93-be27-7a5b19574069.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We can now plot our data. We''ll select only the closing price:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'This generates the following output:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/76555344-12fd-4691-b889-c67fdfd4552d.png)'
  prefs: []
  type: TYPE_IMG
- en: In the preceding diagram, we see the price chart of the daily closing price
    of the S&P 500 for the period we selected.
  prefs: []
  type: TYPE_NORMAL
- en: Analysis of the data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Let''s run some analysis to see what the returns over this period might have
    been had we invested in this ETF:'
  prefs: []
  type: TYPE_NORMAL
- en: 'We''ll pull data for the `first_open` first:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'This generates the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/1277486c-c70d-42a2-a87d-2b30b3bd9951.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Next, let''s get the closing price on the final day of the period:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'This generates the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/9aaea445-e5d0-4e72-be77-f3a6bef10c31.png)'
  prefs: []
  type: TYPE_IMG
- en: 'And finally, let''s see the change over the full period:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'This generates the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/1204d125-c15f-4c58-874d-6289f01b0788.png)'
  prefs: []
  type: TYPE_IMG
- en: So, it appears that a purchase of 100 shares at the start of the period would
    have cost us approximately $11,237 and, at the end of the period, those same 100
    shares would have been valued at roughly $27,564\. This transaction would have
    given us a gain of just a bit over 145% over the period. Not too bad at all.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s now take a look at the return over the same period for just the intraday
    gains. This assumes we buy the stock at the opening of each day and sell it at
    the close of that same day:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'That will give us the change from the open to the close each day. Let''s take
    a look at that:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'This generates the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/116b452a-c510-476b-b667-ef75bd3ce10c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Let''s now total those changes over the period:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'This generates the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/1229a31b-75bc-4423-bf64-8205cb5f9717.png)'
  prefs: []
  type: TYPE_IMG
- en: So, as you can see, we have gone from a gain of over 163 points to one of just
    over 53 points. Ouch! More than half the market's gains came from holding overnight
    during the period.
  prefs: []
  type: TYPE_NORMAL
- en: Volatility of the returns
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The overnight returns were better than the intraday returns, but how about the
    volatility? Returns are always judged on a risk-adjusted basis, so let's see how
    the overnight trades compared to the intraday trades on the basis of their standard
    deviation.
  prefs: []
  type: TYPE_NORMAL
- en: 'We can use NumPy to calculate this for us as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'This generates the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/7d3e5a44-e468-4842-8627-f88be8b32948.png)'
  prefs: []
  type: TYPE_IMG
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'This generates the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/86c5b999-7f02-4c8f-b68d-f8570bafe99e.png)'
  prefs: []
  type: TYPE_IMG
- en: 'So our overnight trading not only had higher gains, but lower volatility as
    well, compared to the intraday trading. But not all volatility is created equal.
    Let''s compare the mean change on downside days versus upside days for both strategies:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'This code generates the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/60138527-ec0f-442c-8324-6ee83becb90c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Run this code for upside days:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'We get the output as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/5b756271-fdf5-4539-a02c-1031411b122e.png)'
  prefs: []
  type: TYPE_IMG
- en: Again, we see that the average downside volatility is far less for our overnight
    trading strategy than our intraday trading strategy.
  prefs: []
  type: TYPE_NORMAL
- en: Daily returns
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'So far, we have looked at everything in terms of points, but let''s now look
    at daily returns. This will help put our gains and losses into a more realistic
    context. Let''s create a pandas series for each scenario: daily returns (close
    to close change), intraday returns, and overnight returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'What we''ve done is use the pandas `.shift()` method to subtract each series
    from the prior day''s series. For example, for the preceding first series, we
    are subtracting the close from the close one day before for each day. This will
    result in one less data point. If you print out the new series, you can see this
    as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'This generates the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a77a8d8c-ee34-42c9-b747-b6c9734d1b2e.png)'
  prefs: []
  type: TYPE_IMG
- en: Statistics for the strategies
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Let''s now take a look at the statistics for all three strategies. We''ll create
    a function that can take in each series of returns, and will print out the summary
    results. We''re going to get statistics for each of our winning, losing, and break-even
    trades, and something called the **Sharpe ratio**. I said earlier that returns
    are judged on a risk-adjusted basis; this is exactly what the Sharpe ratio provides
    us with; it is a method of comparing returns by accounting for the volatility
    of those returns. Here, we use the Sharpe ratio with an adjustment to annualize
    the ratio:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'Let''s now run each strategy to see the stats. We''ll start with the buy-and-hold
    strategy (daily returns) and then move onto the other two, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: 'This generates the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/59e1a71f-db90-4408-a1e7-7e2ca4c92eae.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Run the following code for intraday returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 'This generates the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/3ba22f6f-3a6c-42ba-8c18-ccf0be85d6f1.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Run the following code for overnight returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: 'This generates the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a0460c44-deb4-4ac1-a148-e9b3bb4199f3.png)'
  prefs: []
  type: TYPE_IMG
- en: As you can see, the buy-and-hold strategy has the highest mean return, as well
    as the highest standard deviation, of the three. It also has the largest daily
    drawdown (loss). You will also notice that, even though the overnight-only strategy
    has a higher mean return than the intraday strategy, it also has substantially
    less volatility. This, in turn, gives it a Sharpe ratio that is higher than the
    intraday strategy.
  prefs: []
  type: TYPE_NORMAL
- en: At this point, we have a solid baseline for comparing our future strategies.
    Now, I am going to tell you about a strategy that blows all three of these strategies
    out of the water.
  prefs: []
  type: TYPE_NORMAL
- en: The mystery strategy
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Let''s take a look at the statistics for this new mystery strategy:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/38ea8574-ea3e-4a32-9c5d-098b404b7137.png)'
  prefs: []
  type: TYPE_IMG
- en: With this strategy, I have essentially doubled the Sharpe ratio over buy-and-hold,
    lowered the volatility substantially, increased the max win, and reduced the max
    loss by a significant level.
  prefs: []
  type: TYPE_NORMAL
- en: And how is it that I devised this market-trouncing strategy? Wait for it...
    I did it by generating 5,000 random overnight signals and picked the best one.
  prefs: []
  type: TYPE_NORMAL
- en: This is obviously not the way to beat the market. So why then did I do it? To
    demonstrate that, if you test enough strategies, just by random chance you will
    come across a number that appears to be amazing. This is the called the **data
    mining fallacy**, and it is a real risk in trading strategy development. That
    is why it is so important to find a strategy that is anchored to real-world investor
    biases and behaviors. If you want an edge in trading, you don't trade the markets;
    you the trade people who trade markets*.*
  prefs: []
  type: TYPE_NORMAL
- en: An edge then comes from thoughtfully understanding how people might react incorrectly
    to certain situations.
  prefs: []
  type: TYPE_NORMAL
- en: 'Let''s now extend our analysis. First, we''ll pull data for the index beginning
    with the year 2000:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: 'Let''s now take a look at our chart:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: 'This generates the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/bb069f0f-193a-4920-8620-937b8f1cc537.png)'
  prefs: []
  type: TYPE_IMG
- en: Here, we see the price action for the `SPY` from the start of 2000 until December
    1, 2018\. There has certainly been a lot of movement during that period as the
    market has experienced both highly positive and highly negative regimes.
  prefs: []
  type: TYPE_NORMAL
- en: Let's get our baseline for our new expanded period for our three base strategies.
  prefs: []
  type: TYPE_NORMAL
- en: 'First, let''s set up our variables for each:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, let''s see what the point totals are for each:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: 'This generates the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/129ee241-4113-4bc8-8b58-87ea6ccf0b28.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now, let''s see what the point totals are for open to close:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: 'This generates the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/2438ea4d-8fec-4a91-9b05-0f2346bc764a.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now, let''s see what the point totals are for close to open:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: 'This generates the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/d811fd81-8908-48a0-a292-f6431690e395.png)'
  prefs: []
  type: TYPE_IMG
- en: 'And now let''s look at the statistics for each:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: 'This generates the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/84fd8395-a52a-4816-8440-eed87a9ab176.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now, let''s look at the statistics for intraday returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: 'This generates the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/91666e3b-4eb1-4853-ae95-02e00536b7ef.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now, let''s look at the statistics for overnight returns:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: 'This generates the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/df97c14f-abb1-43c8-a337-08bb4064adba.png)'
  prefs: []
  type: TYPE_IMG
- en: We can see that the differences between the three are even more pronounced over
    the longer period. Had you only held during the day over the past 18 years, you
    would have lost money in this S&P ETF. Had you held only overnight, you would
    have improved your total point returns by over 18%! Obviously, this presumes no
    trading costs and no taxes along with perfect fills but, regardless, this is a
    remarkable finding.
  prefs: []
  type: TYPE_NORMAL
- en: Building the regression model
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now that we have a baseline to compare with, let''s build our first regression
    model. We''re going to start with a very basic model using only the stock''s prior
    closing values to predict the next day''s close, and we''re going to build it
    using a support vector regression. With that, let''s set up our model:'
  prefs: []
  type: TYPE_NORMAL
- en: 'The first step is to set up a DataFrame that contains a price history for each
    day. We''re going to include the past 20 closes in our model:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: 'This code gives us each day''s closing price, along with the previous 20, all
    on the same line. The result of our code is seen in the following output:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/e6d615df-bb9c-44ef-85dd-a55d2b53c7a1.png)'
  prefs: []
  type: TYPE_IMG
- en: This will form the basis of the *X* array we will feed our model. But before
    we're ready for that, there are a few additional steps.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'First, we''ll reverse our columns so that time runs from left to right:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: 'This generates the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/dfea1f30-2143-401b-b300-e614f46889b5.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now, let''s import our support vector machine and set our our training and
    test matrices and vectors:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: 'We had just 5,000 data points to work with, so I chose to use the last 2,000
    for testing. Let''s now fit our model and use it to check out-of-sample data:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: 'Now that we have our predictions, let''s compare them to our actual data:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: 'The preceding code generates the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/ba8c2a4d-b07e-4a05-923e-24aed37b002f.png)'
  prefs: []
  type: TYPE_IMG
- en: Performance of the model
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Let''s now look at the performance of our model. We''re going to buy the next
    day''s open if the close is predicted to be higher than the open. We''ll then
    sell at the close that same day. We''ll need to add a few extra data points to
    our DataFrame to calculate our results, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: 'This generates the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/727e9625-5aec-43c9-b321-15f1735c90f5.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Here we''ll add the following code to get our signal and our profit and loss
    for the signal:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: 'This generates the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/a78fa97e-2bad-40c5-ae25-393a9c2a1750.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Let''s now see whether, using just the price history, we were able to successfully
    predict the next day''s price. We''ll start by calculating the points gained:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: 'This generates the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/702d59f5-f189-42a5-ba32-ff24dce34385.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Ouch! This looks bad. But what about the period we tested? We never evaluated
    it in isolation. How many points would our basic intraday strategy have generated
    during the last 2,000 days:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE37]'
  prefs: []
  type: TYPE_PRE
- en: 'This generates the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/35a29a4d-e1f5-4982-bfcb-a4f60c72d301.png)'
  prefs: []
  type: TYPE_IMG
- en: So it looks as if our strategy is abysmal. Let's compare the two.
  prefs: []
  type: TYPE_NORMAL
- en: 'First, the basic intraday strategy for the period:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE38]'
  prefs: []
  type: TYPE_PRE
- en: 'This generates the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/083afef5-1f88-4d56-ba45-eeb098380cb6.png)'
  prefs: []
  type: TYPE_IMG
- en: 'And now the results for our model:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE39]'
  prefs: []
  type: TYPE_PRE
- en: 'This generates the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/42649d66-83a0-4f34-a788-fa06e81ac148.png)'
  prefs: []
  type: TYPE_IMG
- en: 'It''s clear our strategy is not one we would want to implement. How might we
    improve what we have here? What if we modified our trading strategy? What if we
    only took trades that, instead of just being any amount greater than the open,
    were expected to be greater by a point or more. Would that help? Let''s try it.
    We''ll re-run our strategy with a modified signal, as demonstrated in the following
    code block:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE40]'
  prefs: []
  type: TYPE_PRE
- en: 'This generates the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/55e4a7ef-13b6-4629-94be-90c3774c9fad.png)'
  prefs: []
  type: TYPE_IMG
- en: 'And now the stats:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE41]'
  prefs: []
  type: TYPE_PRE
- en: 'This generates the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/59060bd5-2563-4c21-9c50-466a05f2eced.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We have gone from bad to worse. It appears that, if past price history suggests
    good things to come, you can expect precisely the opposite. We seem to have developed
    a contrarian indicator with our model. What if we explore that? Let''s see what
    our gains would look like if we flipped our model so that, when we predict strong
    gains, we don''t trade, but otherwise we do:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE42]'
  prefs: []
  type: TYPE_PRE
- en: 'This generates the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/eb79b57d-2e6c-4cfe-ad90-11e23c8aec11.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Let''s get our stats:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE43]'
  prefs: []
  type: TYPE_PRE
- en: 'This generates the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/7d8ec085-d251-4432-9ca5-5c8371dc6ad3.png)'
  prefs: []
  type: TYPE_IMG
- en: It looks like we do have a contrarian indicator here. When our model predicts
    strong next-day gains, the market significantly underperforms, at least during
    our test period. Would this hold in most scenarios? Unlikely. Markets tend to
    flip from regimes of mean reversion to regimes of trend persistence.
  prefs: []
  type: TYPE_NORMAL
- en: At this point, there are a number of extensions we could make to this model.
    We haven't even touched on using technical indicators or fundamental data in our
    model, and we have limited our trades to one day. All of this could be tweaked
    and extended upon, but there is one important point we have not addressed that
    must be mentioned.
  prefs: []
  type: TYPE_NORMAL
- en: The data we are working with is of a special type called **time series data**.
    Time series data requires special treatment to properly model it, as it typically
    violates the assumptions required for statistical modeling, such as a constant
    mean and variance.
  prefs: []
  type: TYPE_NORMAL
- en: One consequence of improperly handling time series data is that error metrics
    give wildly inaccurate measures. Because of significant autocorrelation, in other
    words, the data in the next period is highly correlated with data in the current
    period, it appears that we have achieved much better predictions than we actually
    have.
  prefs: []
  type: TYPE_NORMAL
- en: To address these issues, time series data is often **differenced** (in the case
    of stock data, this would mean we look at the daily change, not the absolute level
    of the index) to render it as what we call **stationary**; that is, it has a constant
    mean and variance and lacks significant autocorrelation.
  prefs: []
  type: TYPE_NORMAL
- en: If you intend to pursue working with time series data, I implore you to research
    these concepts in more detail.
  prefs: []
  type: TYPE_NORMAL
- en: Dynamic time warping
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Next, however, I want to introduce another model, which uses a completely different
    algorithm. This algorithm is called **dynamic time warping**. What it does is
    give you a metric that represents the similarity between two time series:'
  prefs: []
  type: TYPE_NORMAL
- en: 'To get started, we''ll need to `pip install` the `fastdtw` library:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE44]'
  prefs: []
  type: TYPE_PRE
- en: 'Once that is installed, we''ll import the additional libraries we''ll need:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE45]'
  prefs: []
  type: TYPE_PRE
- en: 'Next, we''ll create the function that will take in two series and return the
    distance between them:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE46]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, we''ll split our 18 years'' worth of time series data into distinct five-day
    periods. We''ll pair together each period with one additional point. This will
    serve to create our *x* and *y* data, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE47]'
  prefs: []
  type: TYPE_PRE
- en: 'We can take a look at our first series to get an idea of what the data looks
    like:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE48]'
  prefs: []
  type: TYPE_PRE
- en: 'This generates the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/60f02d5a-6428-4761-8f83-d88401d360e5.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now that we have each series, we can run them all through our algorithm to
    get the distance metric for each series against every other series:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE49]'
  prefs: []
  type: TYPE_PRE
- en: 'Once we have that, we can place it into a `DataFrame`. We''ll drop series that
    have `0` distance, as they represent the same series. We''ll also sort according
    to the date of the series and look only at those where the first series is before
    the second, chronologically speaking:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE50]'
  prefs: []
  type: TYPE_PRE
- en: 'And finally, we''ll limit our trades where the distance is less than `1` and
    the first series has a positive return:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE51]'
  prefs: []
  type: TYPE_PRE
- en: 'This generates the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/adb82c6f-6a3a-44f6-b76b-559fb4fc0f63.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Let''s see what one of our top patterns (A:6 and B:598) looks like when plotted:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE52]'
  prefs: []
  type: TYPE_PRE
- en: 'The preceding code generates the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/5e0fe1c2-0cd7-4bb7-b3e6-2dc607a7542a.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Now, we''ll plot the second one:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE53]'
  prefs: []
  type: TYPE_PRE
- en: 'The preceding code generates the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/3d57a1f6-daa1-4a21-8049-accc007be82e.png)'
  prefs: []
  type: TYPE_IMG
- en: As you can see, the curves are nearly identical, which is exactly what we want.
    We're going to try to find all curves that have positive next-day gains and then,
    once we have a curve that is highly similar to one of these profitable curves,
    we'll buy it in anticipation of another gain.
  prefs: []
  type: TYPE_NORMAL
- en: Evaluating our trades
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Let''s now construct a function to evaluate our trades. We''ll buy similar
    curves unless they fail to return a positive result. If that happens, we''ll eliminate
    them, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE54]'
  prefs: []
  type: TYPE_PRE
- en: 'Now that we have all the returns from our trades stored in `return_list`, let''s
    evaluate the results:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE55]'
  prefs: []
  type: TYPE_PRE
- en: 'This generates the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/c30f2649-f010-49bf-8967-c431a1f1b4ee.png)'
  prefs: []
  type: TYPE_IMG
- en: These results are by far the best we've seen. The win/loss ratio and the mean
    are far above our other models. It appears we may be on to something with this
    new model, especially compared to the others we've seen.
  prefs: []
  type: TYPE_NORMAL
- en: At this point, to vet our model further, we should explore its robustness by
    examining other time periods for our matches. Does extending beyond the four days
    improve the model? Should we always exclude the patterns that generate a loss?
    There are an enormous number of questions to explore at this point, but I'll leave
    this as an exercise for the reader.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we've looked at the inner workings of the stock market and
    explored a number of ways to approach utilizing machine learning in a trading
    strategy. There is no doubt the material in this chapter could fill a book itself.
    We even failed to cover some of the most important aspects of trading, such as
    portfolio construction, risk mitigation, and money management. These are critical
    components to any strategy, perhaps even more important than trade signals.
  prefs: []
  type: TYPE_NORMAL
- en: Hopefully, this will serve as a jumping-off point for your own explorations,
    but again, I caution you that *beating the market* is a nearly impossible game—one
    in which you are competing against the brightest minds in the world. If you do
    decide to try, I wish you the best of luck. Just remember that I warned you if
    it doesn't turn out like you hoped!
  prefs: []
  type: TYPE_NORMAL
