["```py\n    [ [1,7], [-5,9] ]\n    [-9,4]\n    [4,-2] \n    ```", "```py\n    mean([ [1,7], [-5,9] ]) = [-2,8]\n    ```", "```py\n    [ [1,7], [-5,9] ]\n    [-9,4]\n    [4,-2] \n    ```", "```py\n    [-2,8]\n    [-9,4]\n    [4,-2]\n    ```", "```py\n    [ [1,7], [-5,9], [-9,4] ]\n    [4,-2] \n    ```", "```py\n    [ [ [1,7], [-5,9], [-9,4], [4,-2] ] ]\n    ```", "```py\n    from scipy.cluster.hierarchy import linkage, dendrogram, fcluster\n    from sklearn.datasets import make_blobs\n    import matplotlib.pyplot as plt\n    %matplotlib inline\n    # Generate a random cluster dataset to experiment on. X = coordinate points, y = cluster labels (not needed)\n    X, y = make_blobs(n_samples=1000, centers=8, n_features=2, random_state=800)\n    ```", "```py\n    plt.scatter(X[:,0], X[:,1])\n    plt.show()\n    ```", "```py\n    # Generate distance matrix with 'linkage' function\n    distances = linkage(X, method=\"centroid\", metric=\"euclidean\")\n    print(distances)\n    ```", "```py\n    dn = dendrogram(distances)\n    plt.show()\n    ```", "```py\n    scipy_clusters = fcluster(distances, 3, criterion=\"distance\")\n    plt.scatter(X[:,0], X[:,1], c=scipy_clusters)\n    plt.show()\n    ```", "```py\n['centroid', 'single', 'complete', 'average', 'weighted']\n```", "```py\n    from sklearn.cluster import AgglomerativeClustering\n    from sklearn.datasets import make_blobs\n    import matplotlib.pyplot as plt\n    from scipy.cluster.hierarchy import linkage, dendrogram, fcluster\n    ac = AgglomerativeClustering(n_clusters = 8, affinity=\"euclidean\", linkage=\"average\")\n    X, y = make_blobs(n_samples=1000, centers=8, n_features=2, random_state=800)\n    distances = linkage(X, method=\"centroid\", metric=\"euclidean\")\n    sklearn_clusters = ac.fit_predict(X)\n    scipy_clusters = fcluster(distances, 3, criterion=\"distance\")\n    ```", "```py\n    plt.figure(figsize=(6,4))\n    plt.title(\"Clusters from Sci-Kit Learn Approach\")\n    plt.scatter(X[:, 0], X[:, 1], c = sklearn_clusters ,s=50, cmap='tab20b')\n    plt.show()\n    ```", "```py\nplt.figure(figsize=(6,4))\nplt.title(\"Clusters from SciPy Approach\")\nplt.scatter(X[:, 0], X[:, 1], c = scipy_clusters ,s=50, cmap='tab20b')\nplt.show()\n```"]