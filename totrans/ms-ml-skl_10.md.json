["```py\n>>> from sklearn.cross_validation import train_test_split\n>>> from sklearn.neural_network import MultilayerPerceptronClassifier\n>>> y = [0, 1, 1, 0] * 1000\n>>> X = [[0, 0], [0, 1], [1, 0], [1, 1]] * 1000\n>>> X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=3)\n```", "```py\n>>> clf = MultilayerPerceptronClassifier(n_hidden=[2],\n>>>                                      activation='logistic',\n>>>                                      algorithm='sgd',\n>>>                                      random_state=3)\n>>> clf.fit(X_train, y_train)\n```", "```py\n>>> print 'Number of layers: %s. Number of outputs: %s' % (clf.n_layers_, clf.n_outputs_)\n>>> predictions = clf.predict(X_test)\n>>> print 'Accuracy:', clf.score(X_test, y_test)\n>>> for i, p in enumerate(predictions[:10]):\n>>>     print 'True: %s, Predicted: %s' % (y_test[i], p)\nNumber of layers: 3\\. Number of outputs: 1\nAccuracy: 1.0\nTrue: 1, Predicted: 1\nTrue: 1, Predicted: 1\nTrue: 1, Predicted: 1\nTrue: 0, Predicted: 0\nTrue: 1, Predicted: 1\nTrue: 0, Predicted: 0\nTrue: 0, Predicted: 0\nTrue: 1, Predicted: 1\nTrue: 0, Predicted: 0\nTrue: 1, Predicted: 1\n```", "```py\nfrom sklearn.datasets import load_digits\nfrom sklearn.cross_validation import train_test_split, cross_val_score\nfrom sklearn.pipeline import Pipeline\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.neural_network.multilayer_perceptron import MultilayerPerceptronClassifier\n```", "```py\n>>> if __name__ == '__main__':\n>>>     digits = load_digits()\n>>>     X = digits.data\n>>>     y = digits.target\n```", "```py\n>>>     pipeline = Pipeline([\n>>>         ('ss', StandardScaler()),\n>>>         ('mlp', MultilayerPerceptronClassifier(n_hidden=[150, 100], alpha=0.1))\n>>>     ])\n>>>     print cross_val_score(pipeline, X, y, n_jobs=-1)\nAccuracies [ 0.95681063  0.96494157  0.93791946]\n```"]