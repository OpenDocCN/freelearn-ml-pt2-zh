["```py\n    C:\\Users\\Packt> cd C:\\Users\\Packt\\Desktop\n    ```", "```py\n    C:\\Users\\Packt> jupyter notebook\n    ```", "```py\n    >>> print('Hello World!')\n    ```", "```py\n!conda list\n```", "```py\n!conda install <package name>\n```", "```py\n!conda install seaborn\n```", "```py\nimport matplotlib\n```", "```py\n    df = pd.read_csv('Titanic.csv')\n    ```", "```py\n    df.head()\n    ```", "```py\n    df['Age']\n    ```", "```py\n    df.Age\n    ```", "```py\n    df[['Name', 'Parch', 'Sex']]\n    ```", "```py\n    df.iloc[0]\n    ```", "```py\n    df.iloc[[0,1,2]]\n    ```", "```py\n    columns = df.columns # Extract the list of columns\n    print(columns)\n    ```", "```py\n    df[columns[1:4]] # Columns 2, 3, 4\n    ```", "```py\n    len(df)\n    ```", "```py\n    df.iloc[2]['Fare'] # Row centric\n    ```", "```py\n    df.iloc[2].Fare # Row centric\n    ```", "```py\n    df['Fare'][2] # Column centric\n    ```", "```py\n    df.Fare[2] # Column centric\n    ```", "```py\n    child_passengers = df[df.Age  < 21][['Name', 'Age']]\n    child_passengers.head()\n    ```", "```py\n    print(len(child_passengers))\n    ```", "```py\n    young_adult_passengers = df.loc[\n        (df.Age > 21) & (df.Age < 30)\n    ]\n    len(young_adult_passengers)\n    ```", "```py\n    df.loc[\n        (df.Pclass == 3) | (df.Pclass ==1)\n    ]\n    ```", "```py\n    df.loc[\n        ~((df.Pclass == 3) | (df.Pclass ==1))\n    ]\n    ```", "```py\n    del df['Unnamed: 0']\n    df.head()\n    ```", "```py\ndf.head(n=20) # 20 lines\ndf.head(n=32) # 32 lines\n```", "```py\ndf.describe()\n```", "```py\ndf.count()\n```", "```py\ndf.describe(include='all')\n```", "```py\n    embarked_grouped = df.groupby('Embarked')\n    print(f'There are {len(embarked_grouped)} Embarked groups')\n    ```", "```py\n    embarked_grouped.groups\n    ```", "```py\n    df.iloc[1]\n    ```", "```py\n    for name, group in embarked_grouped:\n        print(name, group.Age.mean())\n    ```", "```py\n    embarked_grouped.agg(np.mean)\n    ```", "```py\n    def first_val(x):\n\n        return x.values[0]\n    embarked_grouped.agg(first_val)\n    ```", "```py\nlambda <input values>: <computation for values to be returned>\n```", "```py\n    embarked_grouped.agg(lambda x: x.values[0])\n    ```", "```py\n    embarked_grouped.agg([lambda x: x.values[0], np.mean, np.std])\n    ```", "```py\n    embarked_grouped.agg({\n        'Fare': np.sum,\n        'Age': lambda x: x.values[0]\n    })\n    ```", "```py\n    age_embarked_grouped = df.groupby(['Sex', 'Embarked'])\n    age_embarked_grouped.groups\n    ```", "```py\ncomplete_data = df.dropna()\n```", "```py\ndf.aggregate(lambda x: x.isna().sum())\n```", "```py\ndf_valid = df.loc[(~df.Embarked.isna()) & (~df.Fare.isna())]\n```", "```py\ndf_valid[['Age']] = df_valid[['Age']].fillna(df_valid.Age.mean())\n```", "```py\nfor name, grp in df_valid.groupby(['Pclass', 'Sex']):\n    print('%i' % name[0], name[1], '%0.2f' % grp['Age'].mean())\n```", "```py\nmean_ages = df_valid.groupby(['Pclass', 'Sex'])['Age'].\\\n    transform(lambda x: x.fillna(x.mean()))\ndf_valid.loc[:, 'Age'] = mean_ages\n```", "```py\nmean_ages = df_valid.groupby(['Pclass', 'Sex'])['Age'].\\\n    transform(lambda x: x.fillna(x.mean()))\n```", "```py\ndf_valid.loc[:, 'Age'] = mean_ages\n```", "```py\ndf_oversample = df.append(df.iloc[0])\n```", "```py\n    df_nan_fare = df.loc[(df.Fare.isna())]\n    df_nan_fare\n    ```"]