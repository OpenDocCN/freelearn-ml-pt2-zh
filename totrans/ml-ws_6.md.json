["```py\n    import pandas as pd\n    import numpy as np\n    ```", "```py\n    data = pd.read_csv(\"bank-full.csv\")\n    data.head()\n    ```", "```py\n    data = pd.read_csv(\"bank-full.csv\", delimiter = \";\")\n    data.head()\n    ```", "```py\n    data = data.replace(\"unknown\", np.NaN)\n    data.head()\n    ```", "```py\n    data.to_csv(\"bank-full-dataset.csv\")\n    ```", "```py\n    data[\"education\"] = data[\"education\"].fillna[\"unknown\"]\n    encoder = [\"unknown\", \"primary\", \"secondary\", \"tertiary\"]\n    for i, word in enumerate(encoder):\n        data[\"education\"] = data[\"education\"].\\\n                            str.replace(word,str(i))\n        data[\"education\"] = data[\"education\"].astype(\"int64\")\n    ```", "```py\n    import pandas as pd\n    from sklearn.neural_network import MLPClassifier\n    import pickle\n    import os\n    ```", "```py\n    data = pd.read_csv(\"fertility_Diagnosis.csv\", header=None)\n    X = data.iloc[:,:9]\n    Y = data.iloc[:,9]\n    ```", "```py\n    model = MLPClassifier(max_iter = 1200)\n    model.fit(X,Y)\n    ```", "```py\n    path = os.getcwd() + \"/model_exercise.pkl\"\n    file = open(path, \"wb\")\n    pickle.dump(model, file)\n    ```", "```py\n    import pickle\n    import os\n    from sklearn.neural_network import MLPClassifier\n    ```", "```py\n    path = os.getcwd() + \"/model_exercise.pkl\"\n    file = open(path, \"rb\")\n    model = pickle.load(file)\n    ```", "```py\n    pred = model.predict([[-0.33,0.67,1,1,0,0,0.8,-1,0.5]])\n    print(pred)\n    ```", "```py\n    ['O']\n    ```", "```py\n    [0] \n    ```", "```py\n    import pickle\n    import os\n    ```", "```py\n    Class NN_Model(object):\n    ```", "```py\n    def __init__(self):\n        path = os.getcwd() + \"/model_exercise.pkl\"\n        file = open(path, \"rb\")\n        self.model = pickle.load(file)\n    ```", "```py\n    def predict(self, season, age, childish, trauma, \\\n                surgical, fevers, alcohol, smoking, sitting):\n        X = [[season, age, childish, trauma, surgical, \\\n              fevers, alcohol, smoking, sitting]]\n        return self.model.predict(X)\n    ```", "```py\n    from exerciseClass import NN_Model\n    ```", "```py\n    model = NN_Model()\n    ```", "```py\n    a = 1      # season in which the analysis was performed\n    b = 0.56   # age at the time of the analysis\n    c = 1      # childish disease\n    d = 1      # accident or serious trauma\n    e = 1      # surgical intervention\n    f = 0      # high fevers in the last year\n    g = 1      # frequency of alcohol consumption\n    h = -1     # smoking habit\n    i = 0.63   # number of hours spent sitting per day\n    ```", "```py\n    pred = model.predict(season=a, age=b, childish=c, \\\n                         trauma=d, surgical=e, fevers=f, \\\n                         alcohol=g, smoking=h, sitting=i)\n    print(pred)\n    ```", "```py\n    ['N']\n    ```"]