["```py\ncitrus fruit,semi-finished bread,margarine,ready soups\ntropical fruit,yogurt,coffee\nwhole milk\npip fruit,yogurt,cream cheese,meat spreads\nother vegetables,whole milk,condensed milk,long life bakery product\n```", "```py\n> groceries <- read.transactions(\"groceries.csv\", sep = \",\")\n\n```", "```py\n> summary(groceries)\ntransactions as itemMatrix in sparse format with\n 9835 rows (elements/itemsets/transactions) and\n 169 columns (items) and a density of 0.02609146\n\n```", "```py\nmost frequent items:\n whole milk other vegetables       rolls/buns\n 2513             1903             1809\n soda           yogurt          (Other)\n 1715             1372            34055\n\n```", "```py\nelement (itemset/transaction) length distribution:\nsizes\n 1    2    3    4    5    6    7    8    9   10   11   12\n2159 1643 1299 1005  855  645  545  438  350  246  182  117\n 13   14   15   16   17   18   19   20   21   22   23   24\n 78   77   55   46   29   14   14    9   11    4    6    1\n 26   27   28   29   32\n 1    1    1    3    1\n\n Min. 1st Qu.  Median    Mean 3rd Qu.    Max.\n 1.000   2.000   3.000   4.409   6.000  32.000\n\n```", "```py\n> inspect(groceries[1:5])\n items \n1 {citrus fruit, \n margarine, \n ready soups, \n semi-finished bread} \n2 {coffee, \n tropical fruit, \n yogurt} \n3 {whole milk} \n4 {cream cheese, \n meat spreads, \n pip fruit, \n yogurt} \n5 {condensed milk, \n long life bakery product,\n other vegetables, \n whole milk}\n\n```", "```py\n> itemFrequency(groceries[, 1:3])\nabrasive cleaner artif. sweetener   baby cosmetics\n 0.0035587189     0.0032536858     0.0006100661\n\n```", "```py\n> itemFrequencyPlot(groceries, support = 0.1)\n\n```", "```py\n> itemFrequencyPlot(groceries, topN = 20)\n\n```", "```py\n> image(groceries[1:5])\n\n```", "```py\n> image(sample(groceries, 100))\n\n```", "```py\n> apriori(groceries)\nset of 0 rules\n\n```", "```py\n> groceryrules <- apriori(groceries, parameter = list(support =\n 0.006, confidence = 0.25, minlen = 2))\n\n```", "```py\n> groceryrules\nset of 463 rules\n\n```", "```py\n> summary(groceryrules)\nset of 463 rules\n\nrule length distribution (lhs + rhs):sizes\n 2   3   4\n150 297  16\n\n Min. 1st Qu.  Median    Mean 3rd Qu.    Max.\n 2.000   2.000   3.000   2.711   3.000   4.000\n\n```", "```py\nsummary of quality measures:\n support           confidence          lift \n Min.   :0.006101   Min.   :0.2500   Min.   :0.9932 \n 1st Qu.:0.007117   1st Qu.:0.2971   1st Qu.:1.6229 \n Median :0.008744   Median :0.3554   Median :1.9332 \n Mean   :0.011539   Mean   :0.3786   Mean   :2.0351 \n 3rd Qu.:0.012303   3rd Qu.:0.4495   3rd Qu.:2.3565 \n Max.   :0.074835   Max.   :0.6600   Max.   :3.9565 \n\n```", "```py\nmining info:\n data ntransactions support confidence\n groceries          9835   0.006       0.25\n\n```", "```py\n> inspect(groceryrules[1:3])\n\n```", "```py\n> inspect(sort(groceryrules, by = \"lift\")[1:5])\n\n```", "```py\n> berryrules <- subset(groceryrules, items %in% \"berries\")\n\n```", "```py\n> inspect(berryrules)\n\n```", "```py\n> write(groceryrules, file = \"groceryrules.csv\",\n sep = \",\", quote = TRUE, row.names = FALSE)\n\n```", "```py\n> groceryrules_df <- as(groceryrules, \"data.frame\")\n\n```", "```py\n> str(groceryrules_df)\n'data.frame':463 obs. of 4 variables:\n $ rules     : Factor w/ 463 levels \"{baking powder} => {other vegetables}\",..: 340 302 207 206 208 341 402 21 139 140 ...\n $ support   : num  0.00691 0.0061 0.00702 0.00773 0.00773 ...\n $ confidence: num  0.4 0.405 0.431 0.475 0.475 ...\n $ lift      : num  1.57 1.59 3.96 2.45 1.86 ...\n\n```"]