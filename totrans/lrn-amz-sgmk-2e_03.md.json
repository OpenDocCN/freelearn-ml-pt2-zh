["```py\n    $ aws s3 mb s3://sagemaker-book --region eu-west-1\n    ```", "```py\n    $ aws s3 cp --recursive cat/ s3://sagemaker-book/chapter2/cat/\n    ```", "```py\n    $ aws s3 cp --recursive ner/ s3://sagemaker-book/chapter2/ner/\n    ```", "```py\n    $ aws s3 cp s3://sagemaker-sample-data-us-west-2.s3-us-west-2.amazonaws.com/autopilot/direct_marketing/bank-additional.zip .\n    $ unzip bank-additional.zip\n    $ aws s3 cp bank-additional/bank-additional-full.csv s3://sagemaker-ap-northeast-2-123456789012/direct-marketing/\n    ```", "```py\n    %%sh\n    apt-get -y install unzip\n    wget -N https://sagemaker-sample-data-us-west-2.s3-us-west-2.amazonaws.com/autopilot/direct_marketing/bank-additional.zip\n    unzip -o bank-additional.zip\n    ```", "```py\n    import pandas as pd\n    data = pd.read_csv('./bank-additional/bank-additional-full.csv')\n    print(data.shape)\n    (41188, 21)\n    ```", "```py\n    data[:5] \n    ```", "```py\n    import sagemaker\n    prefix = 'sagemaker/DEMO-smprocessing/input'\n    input_data = sagemaker.Session().upload_data(path='./bank-additional/bank-additional-full.csv', key_prefix=prefix)\n    ```", "```py\n    import argparse\n    parser = argparse.ArgumentParser()\n    parser.add_argument('--train-test-split-ratio', \n                        type=float, default=0.3)\n    args, _ = parser.parse_known_args()\n    print('Received arguments {}'.format(args))\n    split_ratio = args.train_test_split_ratio\n    ```", "```py\n    import os\n    import pandas as pd\n    input_data_path = os.path.join('/opt/ml/processing/input', 'bank-additional-full.csv')\n    df = pd.read_csv(input_data_path) \n    ```", "```py\n    df.dropna(inplace=True)\n    df.drop_duplicates(inplace=True)\n    ```", "```py\n    one_class = df[df['y']=='yes']\n    one_class_count = one_class.shape[0]\n    zero_class = df[df['y']=='no']\n    zero_class_count = zero_class.shape[0]\n    zero_to_one_ratio = zero_class_count/one_class_count\n    print(\"Ratio: %.2f\" % zero_to_one_ratio)\n    ```", "```py\n    import numpy as np\n    df['no_previous_contact'] = \n       np.where(df['pdays'] == 999, 1, 0)\n    ```", "```py\n    df['not_working'] = np.where(np.in1d(df['job'], ['student', 'retired', 'unemployed']), 1, 0)\n    ```", "```py\n    from sklearn.model_selection import train_test_split\n    X_train, X_test, y_train, y_test = train_test_split(\n            df.drop('y', axis=1),\n            df['y'],\n            test_size=split_ratio, random_state=0) \n    ```", "```py\n    from sklearn.compose import make_column_transformer\n    from sklearn.preprocessing import StandardScaler,OneHotEncoder\n    preprocess = make_column_transformer(\n      (StandardScaler(), ['age', 'duration', 'campaign', 'pdays', 'previous']),\n      (OneHotEncoder(sparse=False), ['job', 'marital', 'education', 'default', 'housing', 'loan','contact', 'month', 'day_of_week', 'poutcome'])\n    )\n    ```", "```py\n    train_features = preprocess.fit_transform(X_train)\n    test_features = preprocess.transform(X_test)\n    ```", "```py\n    train_features_output_path = os.path.join('/opt/ml/processing/train', 'train_features.csv')\n    train_labels_output_path = os.path.join('/opt/ml/processing/train', 'train_labels.csv')\n    test_features_output_path = os.path.join('/opt/ml/processing/test', 'test_features.csv')\n    test_labels_output_path = os.path.join('/opt/ml/processing/test', 'test_labels.csv')\n    pd.DataFrame(train_features).to_csv(train_features_output_path, header=False, index=False)\n    pd.DataFrame(test_features).to_csv(test_features_output_path, header=False, index=False)\n    y_train.to_csv(train_labels_output_path, header=False, index=False)\n    y_test.to_csv(test_labels_output_path, header=False, index=False)\n    ```", "```py\n    from sagemaker.sklearn.processing import SKLearnProcessor\n    sklearn_processor = SKLearnProcessor(\n        framework_version='0.23-1',\n        role=sagemaker.get_execution_role(),\n        instance_type='ml.m5.xlarge',\n        instance_count=1)\n    ```", "```py\n    from sagemaker.processing import ProcessingInput, ProcessingOutput\n    sklearn_processor.run(\n        code='preprocessing.py',\n        inputs=[ProcessingInput(\n            source=input_data,   # Our data in S3                   \n            destination='/opt/ml/processing/input')\n        ],               \n        outputs=[\n            ProcessingOutput(\n                source='/opt/ml/processing/train',                             \n                output_name='train_data'),                                   \n            ProcessingOutput(\n                source='/opt/ml/processing/test',\n                output_name='test_data'                                                 \n                )\n        ],\n        arguments=['--train-test-split-ratio', '0.2']\n    )\n    ```", "```py\n    Received arguments Namespace(train_test_split_ratio=0.2)\n    Reading input data from /opt/ml/processing/input/bank-additional-full.csv\n    Positive samples: 4639\n    Negative samples: 36537\n    Ratio: 7.88\n    Splitting data into train and test sets with ratio 0.2\n    Running preprocessing and feature engineering transformations\n    Train data shape after preprocessing: (32940, 58)\n    Test data shape after preprocessing: (8236, 58)\n    Saving training features to /opt/ml/processing/train/train_features.csv\n    Saving test features to /opt/ml/processing/test/test_features.csv\n    Saving training labels to /opt/ml/processing/train/train_labels.csv\n    Saving test labels to /opt/ml/processing/test/test_labels.csv\n    ```", "```py\n    preprocessing_job_description = \n       sklearn_processor.jobs[-1].describe()\n    output_config = preprocessing_job_description['ProcessingOutputConfig']\n    for output in output_config['Outputs']:\n        print(output['S3Output']['S3Uri'])\n    ```", "```py\n    s3://sagemaker-eu-west-1-123456789012/sagemaker-scikit-learn-2020-04-22-10-09-43-146/output/train_data\n    s3://sagemaker-eu-west-1-123456789012/sagemaker-scikit-learn-2020-04-22-10-09-43-146/output/test_data\n    ```", "```py\n    $ aws s3 cp s3://sagemaker-eu-west-1-123456789012/sagemaker-scikit-learn-2020-04-22-09-45-05-711/output/train_data/train_features.csv .\n    $ aws s3 cp s3://sagemaker-eu-west-1-123456789012/sagemaker-scikit-learn-2020-04-22-09-45-05-711/output/train_data/train_labels.csv .\n    $ head -1 train_features.csv\n    0.09604515376959515,-0.6572847857673993,-0.20595554104907898,0.19603112301129622,-0.35090125695736246,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0,0.0,1.0,0.0\n    $ head -1 train_labels.csv\n    no\n    ```"]